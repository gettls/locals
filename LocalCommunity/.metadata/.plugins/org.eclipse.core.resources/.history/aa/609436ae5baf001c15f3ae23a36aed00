package community.locals.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Embedded;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.BatchSize;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.RequiredArgsConstructor;

@Entity
@Getter
@EntityListeners(AuditingEntityListener.class)
public class Member {

	@Id @GeneratedValue
	@Column(name = "MEMBER_ID")
	private Long id;
	private String username;
	private String password;
	@CreatedDate
	private LocalDateTime createdDate;
	
	@OneToMany(mappedBy = "member", cascade = CascadeType.ALL, orphanRemoval = true)
	@BatchSize(size = 10)
	private List<Post> posts = new ArrayList<>();
	
	protected Member() {}
	
	public void update(Member member) {
		username = member.getUsername();
		password = member.getPassword();
	}
	
	public void addPost(Post post) {
		posts.add(post);
	}

	@Builder
	public Member(String username, String password) {
		this.username = username;
		this.password = password;
	}
}
