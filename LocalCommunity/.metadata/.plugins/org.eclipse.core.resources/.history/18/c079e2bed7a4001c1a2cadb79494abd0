package community.locals.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Embedded;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.validation.constraints.NotNull;

import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import community.locals.dto.member.MemberRegister;
import community.locals.dto.member.MemberUpdate;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.RequiredArgsConstructor;

@Entity
@Getter
@EntityListeners(AuditingEntityListener.class)
public class Member {

	@Id @GeneratedValue
	@Column(name = "MEMBER_ID")
	private Long id;
	private String username;
	private String password;
	@Embedded
	private Location location;
	@CreatedDate
	private LocalDateTime createdDate;
	
	@OneToMany(mappedBy = "member", cascade = CascadeType.ALL, orphanRemoval = true)
	private List<Post> posts = new ArrayList<>();
	
	protected Member() {}
	
	@Builder
	public Member(MemberRegister memberRegister) {
		username = memberRegister.getUsername();
		password = memberRegister.getPassword();
	}
	
	public void update(MemberUpdate memberUpdate) {
		username = memberUpdate.getUsername();
		password = memberUpdate.getPassword();
	}
	
	public void addPost(Post post) {
		posts.add(post);
	}
}
