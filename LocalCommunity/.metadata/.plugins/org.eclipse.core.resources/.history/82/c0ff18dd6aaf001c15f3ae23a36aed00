package community.locals.repository.post;

import static community.locals.domain.QPost.post;
import static community.locals.domain.QMember.member;

import java.util.List;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.Pageable;

import com.querydsl.jpa.impl.JPAQueryFactory;

import community.locals.domain.Post;
import community.locals.dto.member.MemberResponse;
import community.locals.dto.member.QMemberResponse;
import community.locals.dto.post.PostResponse;
import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
public class CustomPostRepositoryImpl implements CusotmPostRepository{

	private final JPAQueryFactory jpaQueryFactory;
//	
//	@Override
//	public Page<PostResponse> findAllSortedByCreateDate(Pageable pageable) {
//		
//		
//		List<PostResponse> result = jpaQueryFactory
//								.select()
//								.from()
//								.offset(pageable.getOffset())
//								.limit(pageable.getPageSize())
//								.fetch();
//		
//		result.forEach(
//				p -> {
//					List<MemberResponse> memberResponses = findMember(p.getMember().getUsername());
//				});
//		
//		return new PageImpl<PostResponse>(result, pageable, result.size());
//	}
//	
//	private List<MemberResponse> findMember(String username){
//		return jpaQueryFactory
//					.select(new QMemberResponse(
//							member.username))
//					.from(member)
//					.where(member.username.eq(username))
//					.fetch();
//	}
//}
